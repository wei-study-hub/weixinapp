<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper  
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.yuedong.dao.impl.CourseInfoDaoImpl">

	<sql id="all_column">
		id id,
		course_name courseName,
		course_code courseCode,
		price price,
		service_city_name serviceCityName,
		service_areas_name serviceAreasName,
		trainer_code trainerCode,
		create_time createTime,
		modify_time modifyTime,
		status status,
		course_type_name courseTypeName,
		course_rank courseRank,
		img_url imgUrl,
		begin_time beginTime,
		end_time endTime,
		address address,
		max_join_num maxJoinNum,
		min_join_num minJoinNum,
		join_num joinNum,
		remarks remarks,
		deleted deleted,
		course_type_code courseTypeCode,
		discount_price discountPrice,
		longitude longitude,
		latitude latitude,
		publisher_code publisherCode,
		publisher_name publisherName,
		is_online isOnline,
		telephone telephone,
		exp_course_code expCourseCode,
		deadline deadline
	</sql>

	<sql id="where_caluse">
		<where>
			DELETED = 'F'
			<if test="status != null and status !='' ">
				AND status = #{status,jdbcType=VARCHAR}
			</if>
			<if test="courseTypeName != null and courseTypeName !='' ">
				AND course_type_name = #{courseTypeName,jdbcType=VARCHAR}
			</if>
			<if test="courseTypeCode != null and courseTypeCode !='' ">
				AND course_type_code = #{courseTypeCode,jdbcType=VARCHAR}
			</if>
			<if test="isOnline != null and isOnline !='' ">
				AND is_online = #{isOnline,jdbcType=VARCHAR}
			</if>
			<if test="expCourseCode != null and expCourseCode !='' ">
				AND exp_course_code = #{expCourseCode,jdbcType=VARCHAR}
			</if>
			<if test="courseCode != null and courseCode !='' ">
				AND course_code = #{courseCode,jdbcType=VARCHAR}
			</if>

		</where>
	</sql>

	<select id="findByCode" parameterType="String"
		resultType="org.yuedong.model.CourseInfo">
		SELECT
		<include refid="all_column" />
		FROM t_course_info
		WHERE course_code = #{courseCode,jdbcType=VARCHAR}
		AND DELETED =
		'F'
	</select>



	<insert id="insert" parameterType="org.yuedong.model.CourseInfo">
		INSERT INTO t_course_info(
		id,
		course_name,
		course_code,
		price,
		service_city_name,
		service_areas_name,
		trainer_code,
		create_time,
		modify_time,
		status,
		course_type_name,
		course_rank,
		img_url,
		begin_time,
		end_time,
		address,
		max_join_num,
		min_join_num,
		join_num,
		remarks,
		deleted,
		course_type_code,
		discount_price,
		longitude,
		latitude,
		publisher_code,
		publisher_name,
		is_online,
		telephone,
		exp_course_code,
		deadline deadline
		)
		VALUES(
		#{id,jdbcType=INTEGER},
		#{courseName,jdbcType=VARCHAR},
		#{courseCode,jdbcType=VARCHAR},
		#{price,jdbcType=INTEGER},
		#{serviceCityName,jdbcType=VARCHAR},
		#{serviceAreasName,jdbcType=VARCHAR},
		#{trainerCode,jdbcType=VARCHAR},
		#{createTime,jdbcType=TIMESTAMP},
		#{modifyTime,jdbcType=TIMESTAMP},
		#{status,jdbcType=VARCHAR},
		#{courseTypeName,jdbcType=VARCHAR},
		#{courseRank,jdbcType=INTEGER},
		#{imgUrl,jdbcType=VARCHAR},
		#{beginTime,jdbcType=TIMESTAMP},
		#{endTime,jdbcType=TIMESTAMP},
		#{address,jdbcType=VARCHAR},
		#{maxJoinNum,jdbcType=INTEGER},
		#{minJoinNum,jdbcType=INTEGER},
		#{joinNum,jdbcType=INTEGER},
		#{remarks,jdbcType=VARCHAR},
		#{deleted,jdbcType=VARCHAR},
		#{courseTypeCode,jdbcType=VARCHAR},
		#{discountPrice,jdbcType=INTEGER},
		#{longitude,jdbcType=VARCHAR},
		#{latitude,jdbcType=VARCHAR},
		#{publisherCode,jdbcType=VARCHAR},
		#{publisherName,jdbcType=VARCHAR},
		#{isOnline,jdbcType=VARCHAR},
		#{telephone,jdbcType=VARCHAR},
		#{expCourseCode,jdbcType=VARCHAR},
		#{deadline,jdbcType=TIMESTAMP}
		)
		<selectKey keyProperty="id" resultType="int" order="AFTER">
			select
			LAST_INSERT_ID()
		</selectKey>
	</insert>

	<update id="updateByCode" parameterType="org.yuedong.model.CourseInfo">
		UPDATE t_course_info
		set
		<if test="status != null and status !=''   ">
			status = #{status,jdbcType=VARCHAR} ,
		</if>
		<if test="joinNum != null and joinNum != 0 ">
			join_num = #{joinNum,jdbcType=INTEGER} ,
		</if>
		<if test="longitude != null and longitude !=''   ">
			longitude = #{longitude,jdbcType=VARCHAR} ,
		</if>
		<if test="latitude != null and latitude !=''   ">
			latitude = #{latitude,jdbcType=VARCHAR} ,
		</if>
		course_code = #{courseCode,jdbcType=VARCHAR} WHERE course_code = #{courseCode,jdbcType=VARCHAR}
	</update>


	<!-- delete -->
	<delete id="deleteByCode" parameterType="String">
		delete from
		t_course_info
		WHERE course_code = #{courseCode,jdbcType=VARCHAR}
	</delete>

	<!-- pagination finding -->
	<select id="count" parameterType="org.yuedong.model.CourseInfo"
		resultType="java.lang.Integer">
		SELECT COUNT(*) FROM t_course_info
		<include refid="where_caluse" />
	</select>

	<select id="findAll" resultType="org.yuedong.model.CourseInfo">
		SELECT
		<include refid="all_column" />
		FROM t_course_info
		<include refid="where_caluse" />
	</select>

	<select id="findAllCourse" resultType="org.yuedong.model.CourseInfo">
		SELECT
		<include refid="all_column" />
		FROM t_course_info
		<include refid="where_caluse"/>
	</select>
	
	<select id="findNotEndCourse" resultType="org.yuedong.model.CourseInfo" parameterType="String">
		SELECT
		 <include refid="all_column" /> 
		 from t_course_info where status != #{status}
	</select>
	
	
	<select id="page" parameterType="java.util.Map" resultType="org.yuedong.model.CourseInfo">
		SELECT
		<include refid="all_column" />
		FROM t_course_info
		WHERE
		DELETED = 'F'
		
		<if test="courseTypeCode != null and courseTypeCode !='' ">
			AND course_type_code = #{courseTypeCode,jdbcType=VARCHAR}
		</if>
		<if test="serviceAreasName != null and serviceAreasName !='' ">
			AND service_areas_name = #{serviceAreasName,jdbcType=VARCHAR}
		</if>
		
		
		
		ORDER BY
		<if test="orderBy != null">
			${orderBy} ${sort}
		</if>
		<if test="orderBy == null or orderBy == '' ">
			create_time ${sort}
		</if>
		LIMIT #{offset} , #{pageSize}
	</select>
	
	<select id="searchByCourseKey" parameterType="String" resultType="org.yuedong.model.CourseInfo">
	SELECT 
	<include refid="all_column" />
    FROM `t_course_info` 
	where (address LIKE CONCAT('%',#{paramKey,jdbcType=VARCHAR},'%' ) OR 
	course_name LIKE CONCAT('%',#{paramKey,jdbcType=VARCHAR},'%' ) OR 
	trainer_code IN (SELECT trainer_code from t_trainer_info where trainer_name LIKE CONCAT('%',#{paramKey,jdbcType=VARCHAR},'%' ))) and DELETED = 'F'
	</select>
</mapper> 