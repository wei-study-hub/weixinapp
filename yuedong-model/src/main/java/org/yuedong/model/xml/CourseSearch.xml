<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper  
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.yuedong.dao.impl.CourseSearchDaoImpl">

	<sql id="all_column">
			id id,
code code,
titile titile,
remarks remarks,
create_time createTime,
modify_time modifyTime,
deleted deleted 
	</sql>

	<sql id="where_caluse">
		<where>
		DELETED = 'F' 
		 <if test="id != null and id != 0 "> 
AND id = #{id,jdbcType=INTEGER}
</if>
<if test="code != null and code !='' "> 
AND code = #{code,jdbcType=VARCHAR}
</if>
<if test="titile != null and titile !='' "> 
AND titile = #{titile,jdbcType=VARCHAR}
</if>
<if test="remarks != null and remarks !='' "> 
AND remarks = #{remarks,jdbcType=VARCHAR}
</if>
<if test="createTime != null  "> 
AND create_time = #{createTime,jdbcType=TIMESTAMP}
</if>
<if test="modifyTime != null  "> 
AND modify_time = #{modifyTime,jdbcType=TIMESTAMP}
</if>

		</where>
	</sql>

	<select id="findByCode" parameterType="String"
		resultType="org.yuedong.model.CourseSearch">
		SELECT 
		<include refid="all_column" />
		FROM t_course_search
		WHERE code = #{code,jdbcType=INTEGER}
		AND DELETED = 'F'
	</select>



	<insert id="insert" parameterType="org.yuedong.model.CourseSearch">
	 INSERT INTO t_course_search(
	     id,
code,
titile,
remarks,
create_time,
modify_time,
deleted
		) 
		VALUES(
		 #{id,jdbcType=INTEGER},
#{code,jdbcType=VARCHAR},
#{titile,jdbcType=VARCHAR},
#{remarks,jdbcType=VARCHAR},
#{createTime,jdbcType=TIMESTAMP},
#{modifyTime,jdbcType=TIMESTAMP},
#{deleted,jdbcType=VARCHAR}

		)
		<selectKey keyProperty="id" resultType="int" order="AFTER">
			select 
			LAST_INSERT_ID()
		</selectKey>
	</insert>
	
	<update id="updateByCode" parameterType="org.yuedong.model.CourseSearch">
	UPDATE t_course_search  
	set 
	 <if test="code != null and code !=''   "> 
 code = #{code,jdbcType=VARCHAR} ,
</if>
<if test="titile != null and titile !=''   "> 
 titile = #{titile,jdbcType=VARCHAR} ,
</if>
<if test="remarks != null and remarks !=''   "> 
 remarks = #{remarks,jdbcType=VARCHAR} ,
</if>
<if test="createTime != null  "> 
 create_time = #{createTime,jdbcType=TIMESTAMP} ,
</if>
<if test="modifyTime != null  "> 
 modify_time = #{modifyTime,jdbcType=TIMESTAMP} ,
</if>
<if test="deleted != null and deleted !=''   "> 
 deleted = #{deleted,jdbcType=VARCHAR} ,
</if>
 
	code = #{code,jdbcType=INTEGER} 
	WHERE code = #{code,jdbcType=INTEGER}
	</update>
	
	
	<!-- delete -->
	<delete id="deleteByCode" parameterType="String">
		delete from t_course_search  
		WHERE code = #{code,jdbcType=VARCHAR}
	</delete>
	
	<!-- pagination finding -->
	<select id="count" parameterType="org.yuedong.model.CourseSearch" resultType="java.lang.Integer">
		SELECT COUNT(*) FROM t_course_search 
		<include refid="where_caluse" />
	</select>
	
	<select id="findAll" resultType="org.yuedong.model.CourseSearch">
		SELECT <include refid="all_column" />  FROM t_course_search 
	</select>
	
	<select id="page" parameterType="java.util.Map" resultType="org.yuedong.model.CourseSearch">
	    SELECT 
	    <include refid="all_column" /> 
	    FROM t_course_search  
	    WHERE 
			DELETED = 'F' 
			 <if test="id != null and id != 0 "> 
AND id = #{id,jdbcType=INTEGER}
</if>
<if test="code != null and code !='' "> 
AND code = #{code,jdbcType=VARCHAR}
</if>
<if test="titile != null and titile !='' "> 
AND titile = #{titile,jdbcType=VARCHAR}
</if>
<if test="remarks != null and remarks !='' "> 
AND remarks = #{remarks,jdbcType=VARCHAR}
</if>
<if test="createTime != null  "> 
AND create_time = #{createTime,jdbcType=TIMESTAMP}
</if>
<if test="modifyTime != null  "> 
AND modify_time = #{modifyTime,jdbcType=TIMESTAMP}
</if>

		ORDER BY
		<if test="orderBy != null">
			${orderBy} ${sort}
		</if>
		<if test="orderBy == null or orderBy == '' ">
			create_time ${sort}
		</if>
		LIMIT #{offset} , #{pageSize}
	</select>
</mapper> 